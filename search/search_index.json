{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"<p>Das ist die Dokumentation f\u00fcr den FFT-Analysator.</p>"},{"location":"dev_frontend_documentation/","title":"Frontend Documentation","text":""},{"location":"dev_frontend_documentation/#fft_analysator.gui.views.sidebar","title":"sidebar","text":""},{"location":"dev_frontend_documentation/#fft_analysator.gui.views.sidebar.Sidebar","title":"Sidebar","text":"<pre><code>Sidebar(callback_fileupload=None, callback=None)\n</code></pre> Source code in <code>src/fft_analysator/gui/views/sidebar.py</code> <pre><code>def __init__(self, callback_fileupload=None, callback=None):\n\n    self.accordion = Accordion()\n    self.layout = self.accordion.component\n\n    if callback:\n        self.accordion.file_input.component.param.watch(callback_fileupload, \"value\")\n        self.accordion.stretching_switch.component.param.watch(callback, \"value\")\n        self.accordion.multi_choice.component.param.watch(callback, \"value\")\n</code></pre>"},{"location":"dev_frontend_documentation/#fft_analysator.gui.views.sidebar.Sidebar.update_multi_choice","title":"update_multi_choice","text":"<pre><code>update_multi_choice(data_callback=None)\n</code></pre> <p>The update_multi_choice function is used to update the multi_choice component with new data. If a data_callback is provided, then the options of the multi_choice component are set to be the number of channels in that callback. The name of the component is also updated accordingly. Otherwise, if no data_callback was provided, then we assume that there's no file selected and we set both options and name to empty lists/strings respectively.</p> <p>Parameters:</p> Name Type Description Default <code>data_callback</code> <code>object</code> <p>Get the callback to the data object</p> <code>None</code> Source code in <code>src/fft_analysator/gui/views/sidebar.py</code> <pre><code>def update_multi_choice(self, data_callback=None):\n    \"\"\"\n    The update_multi_choice function is used to update the multi_choice component with new data.\n    If a data_callback is provided, then the options of the multi_choice component are set to be\n    the number of channels in that callback. The name of the component is also updated accordingly.\n    Otherwise, if no data_callback was provided, then we assume that there's no file selected and\n    we set both options and name to empty lists/strings respectively.\n\n    Args:\n        data_callback (object): Get the callback to the data object\n    \"\"\"\n    if data_callback:\n        self.accordion.multi_choice.component.name = \"W\u00e4hle 1-2 Channel aus!\"\n        self.accordion.multi_choice.component.options = list(range(data_callback.get_channel_count()))\n        self.accordion.multi_choice.component.max_items = 2\n\n    else:\n        self.accordion.multi_choice.component.name = \"Keine Datei ausgew\u00e4hlt!\"\n        self.accordion.multi_choice.component.options = []\n</code></pre>"}]}